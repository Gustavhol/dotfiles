#!/usr/bin/env bash
#
# Script name: dmconf
# Description: Choose from a list of configuration files to edit.
# Dependencies: dmenu, emacsclient
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor
#               Simon Ingelsson
#               HostGrady
# Usage:
# to use other editor than emacsclient set DMEDITOR accordingly
#   Example: `DMEDITOR="alacritty -e nvim" ./dmconf`
	 DMEDITOR="emacsclient -c -a emacs"
# An array of options to choose.
# You can edit this list to add/remove config files.
	declare -A options
	options[alacritty]="$HOME/.config/alacritty/alacritty.yml"
	options[bash]="$HOME/.bashrc"
	options[dunst]="$HOME/.config/dunst/dunstrc"
	options[herbstluftwm]="$HOME/.config/herbstluftwm/autostart"
	options[neovim]="$HOME/.config/nvim/init.vim"
	options[picom]="$HOME/.config/picom/picom.conf"
	options[polybar]="$HOME/.config/polybar/config"
	options[ssh]="$HOME/.ssh/config"
	options[vim]="$HOME/.vimrc"
	options[xinitrc]="$HOME/.xinitrc"
	options[xresources]="$HOME/.Xresources"
	options[zsh]="$HOME/.zshrc"
# Clean options array making sure that the files exist
declare -A options_clean
  for i in "${!options[@]}"; do
    [[ -f ${options["${i}"]} ]] && options_clean["${i}"]=${options["${i}"]}
  done

# Piping the above array (cleaned) into dmenu.
# We use "printf '%s\n'" to format the array one item to a line.
choice=$(printf '%s\n' "${!options_clean[@]}" | sort | rofi -lines 20 -dmenu -p 'Edit config:' "$@")


# What to do when/if we choose a file to edit.
if [ "$choice" ]; then
  cfg=$(printf '%s\n' "${options_clean["${choice}"]}")
  $DMEDITOR "$cfg"

# What to do if we just escape without choosing anything.
else
    echo "Program terminated." && exit 0
fi
